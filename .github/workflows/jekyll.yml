# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      
      # Create and upload artifact manually
      - name: Create Pages Artifact
        run: |
          # Pack the _site directory into a tar archive
          echo "Creating artifact from _site directory..."
          tar --dereference --hard-dereference --directory _site/ -cf artifact.tar .
          
          # List the contents to verify
          echo "Artifact created. Contents of _site directory:"
          find _site -type f | sort
      
      # Use direct API upload
      - name: Upload to GitHub Pages
        id: deployment
        run: |
          # Get the current commit SHA
          COMMIT_SHA=$(git rev-parse HEAD)
          
          # Configure deployment
          echo "Configuring deployment for commit $COMMIT_SHA"
          
          # Set environment variables for GitHub Pages deployment
          echo "GITHUB_SHA=$COMMIT_SHA" >> $GITHUB_ENV
          echo "GITHUB_PAGES=true" >> $GITHUB_ENV
          
          # Prepare artifact for GitHub Pages
          if [ -f "artifact.tar" ]; then
            echo "Artifact exists, preparing for deployment"
            echo "GITHUB_PAGES_ARTIFACT=artifact.tar" >> $GITHUB_ENV
          else
            echo "Error: artifact.tar not found!"
            exit 1
          fi
          
          # Trigger GitHub Pages deployment
          echo "::set-output name=page_url::https://gregory-ch.github.io"
        
      # The actual deployment
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
